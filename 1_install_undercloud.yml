---
#Playbook for configuring and installing RHOSP director
- hosts: rhosp_director
  name: playbook to complete RHOSP-director configuration and installation
  remote_user: root
  vars_files:
    - vars.yml
  # tasks file for osp_director
  tasks:
    - name: import secret variable file
      include_vars: "vault"
      no_log: true

    - name: set hostname
      hostname:
        name: "{{ undercloud['hostname_full'] }}"

    - name: add line to hosts file for self
      lineinfile:
        dest: /etc/hosts
        state: present
        regexp: "^{{ undercloud['external_ip'] }}"
        line: "{{ undercloud['external_ip'] }}  {{ undercloud['hostname_full'] }}  {{ undercloud['hostname_short'] }}"

    - sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        state: present
        reload: yes

    - name: register System with RHN Subscription Manager
      redhat_subscription:
        state: present
        username: "{{ rhn_user }}"
        password: "{{ rhn_pwd }}"
        pool: "{{ rhn_pool_name }}"
      when: ansible_distribution == 'RedHat' and register_undercloud

    - name: test to see if selinux is running
      command: getenforce
      register: sestatus
      changed_when: false

    - name: disable all repositories
      command: subscription-manager repos --disable=\*
      when: ansible_distribution == 'RedHat' and register_undercloud

    - name: enable the needed rhel repositories
      command: subscription-manager repos --enable={{ item }}
      with_items:
        - rhel-7-server-rpms
        - rhel-7-server-extras-rpms
        - rhel-7-server-rh-common-rpms
        - rhel-ha-for-rhel-7-server-rpms
        - rhel-7-server-openstack-{{ rhosp_version }}-rpms
        - rhel-7-server-satellite-tools-6.2-rpms
        - rhel-7-server-rhceph-2-osd-rpms
        - rhel-7-server-rhceph-2-mon-rpms
        - rhel-7-server-rhceph-2-tools-rpms
      when: ansible_distribution == 'RedHat' and register_undercloud

    - name: add stack user and set password
      user:
        name: stack
        password: "{{ stack_user_pwd }}"

    - name: allow stack user to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^stack'
        line: 'stack ALL=(ALL) NOPASSWD:ALL'

    - name: turn off requiretty for sudo
      lineinfile:
        dest: /etc/sudoers
        line: "{{ item.line }}"
        state: "{{ item.state }}"
      with_items:
         - { line: "Defaults !requiretty", state: present }
         - { line: "Defaults requiretty", state: absent }

    - name: check sudoers
      shell: cat /etc/sudoers | grep tty
      register: sudoers_output

    - name: Debug
      debug:
        msg: "Sudoers: {{ sudoers_output }}"

    - name: install several useful utility and undercloud packages
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - 'screen'
        - 'wget'
        - 'vim'
        - 'tree'
        - 'yum-utils'
        - 'facter'
        - 'crudini'
        - 'git'
        - 'libguestfs-tools-c'
        - 'python-tripleoclient'
        - 'rhosp-director-images'
        - 'rhosp-director-images-ipa'

    - name: update packages
      yum:
        name: '*'
        state: latest
      register: yum_result
      async: 1000
      poll: 30

    - name: check Kernel is the Latest
      shell: if [ $(uname -r) == $(rpm -q kernel | tail -n 1 | sed -e 's/kernel-//g') ] ; then echo no ; else echo reboot; fi
      ignore_errors: true
      register: reboot_hint

    - name: make sure cloud-init is not installed
      yum:
        name: cloud-init
        state: absent

    - name: restart undercloud machine to get updated kernel
      shell: sleep 2 && shutdown -r now "Ansible Restart Triggered for Undercloud Install"
      async: 1
      poll: 0
      ignore_errors: true
      when: yum_result.changed or reboot_hint.stdout.find("reboot") != -1

    - name: waiting for Server to come back
      wait_for:
        host: "{{ inventory_hostname }}"
        state: started
        delay: 10
        connect_timeout: 5
        timeout: 300
        port: 22
      delegate_to: 127.0.0.1
      become: false
      ignore_errors: true

    - name: setting provisioning interface onboot=no
      lineinfile:
        dest: /etc/sysconfig/network-scripts/ifcfg-{{ undercloud['provisioning_interface'] }}
        state: present
        regexp: '^ONBOOT'
        line: 'ONBOOT=no'

    - name: copy undercloud.conf template
      become: yes
      become_user: stack
      copy:
        src: /usr/share/instack-undercloud/undercloud.conf.sample
        dest: /home/stack/undercloud.conf
        remote_src: true
        owner: stack
        group: stack
        mode: 0644

    - name: set undercloud.conf variables in the default section
      become: yes
      become_user: stack
      ini_file:
        dest: /home/stack/undercloud.conf
        section: DEFAULT
        option: "{{ item.key }}"
        value: "{{ item.value }}"
        mode: 0644
        backup: no
      with_items:
        - { key: image_path, value: "/home/stack/images" }
        - { key: undercloud_hostname, value: "{{ undercloud['hostname_full'] }}" }
        - { key: overcloud_domain_name, value: "{{ undercloud['cloud_domain'] }}" }
        - { key: local_ip, value: "{{ undercloud['provisioning_ip'] }}" }
        - { key: local_interface, value: "{{ undercloud['provisioning_interface'] }}" }
        - { key: local_mtu, value: "1500" }
        - { key: undercloud_public_vip, value: "{{ undercloud['external_ip'] }}" }
        - { key: undercloud_admin_vip, value: "{{ undercloud['admin_apis_vip'] }}" }
        - { key: generate_service_certificate, value: "true" }
        - { key: certificate_generate_ca, value: "local" }
        - { key: undercloud_service_certificate, value: ""}
        - { key: service_principal, value: ""}
        - { key: network_cidr, value: "{{ undercloud['provisioning_network_cidr'] }}" }
        - { key: network_gateway, value: "{{ undercloud['provisioning_network_gateway'] }}" }
        - { key: masquerade_network, value: "{{ undercloud['provisioning_network_cidr'] }}" }
        - { key: dhcp_start, value: "{{ undercloud['deploy_dhcp_start'] }}" }
        - { key: dhcp_end, value: "{{ undercloud['deploy_dhcp_end'] }}" }
        - { key: inspection_interface, value: "br-ctlplane"}
        - { key: inspection_iprange, value: "{{ undercloud['inspection_dhcp_start'] }},{{ undercloud['inspection_dhcp_end'] }}" }
        - { key: inspection_runbench, value: "false"}
        - { key: inspection_enable_uefi, value: "true"}
        - { key: undercloud_debug, value: "false"}
        - { key: enable_tempest, value: "true"}
        - { key: enable_validations, value: "true"}
        - { key: enable_mistral, value: "true"}
        - { key: enable_zaqar, value: "true"}
        - { key: enable_telemetry, value: "true"}
        - { key: enable_ui, value: "true"}
        - { key: ipxe_enabled, value: "true"}
        - { key: store_events, value: "true" }
        - { key: clean_nodes, value: "{{ undercloud['clean_nodes'] }}"}
        - { key: undercloud_name_servers, value: "{{ undercloud['name_servers'] }}"}
        - { key: undercloud_ntp_servers, value: "{{ undercloud['ntp_servers'] }}"}


    - name: set undercloud.conf variables in the auth section
      become: yes
      become_user: stack
      ini_file:
        dest: /home/stack/undercloud.conf
        option: undercloud_admin_password
        section: auth
        value: "{{ undercloud['admin_password'] }}"
        mode: 0644
        backup: no

    - name: make images and templates directories
      become: yes
      become_user: stack
      file:
        path: "/home/stack/{{ item }}"
        state: directory
        mode: 0755
        owner: stack
        group: stack
      with_items:
        - 'images'
        - 'templates'

    - name: unpacking overcloud and ironic images
      become: yes
      become_user: stack
      unarchive:
        src: "{{ item }}"
        remote_src: true
        dest: /home/stack/images
      with_items:
        - '/usr/share/rhosp-director-images/overcloud-full-latest-{{ rhosp_version }}.0.tar'
        - '/usr/share/rhosp-director-images/ironic-python-agent-latest-{{ rhosp_version }}.0.tar'

    - name: install the Undercloud
      become: yes
      become_user: stack
      shell: openstack undercloud install
      args:
        chdir: /home/stack
      async: 2700
      poll: 30

    - name: adding overcloud images to OSPD
      become: yes
      become_user: stack
      shell: source /home/stack/stackrc && openstack overcloud image upload
      args:
        chdir: /home/stack/images

    - name: adding dns to ctlplane subnet
      become: yes
      become_user: stack
      shell: source /home/stack/stackrc && openstack subnet set --dns-nameserver {{ undercloud['name_servers'] }} $(openstack subnet list | awk '/192.168.2/ {print $2}')

    - name: configuring fernet tokens for overcloud
      become: yes
      become_user: stack
      shell: source /home/stack/stackrc && sudo keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone && sudo tar -zcf /home/stack/keystone-fernet-keys.tar.gz /etc/keystone/fernet-keys && upload-swift-artifacts -f /home/stack/keystone-fernet-keys.tar.gz

    - name: set debug flag to false in DEFAULT section
      ini_file:
        dest: "{{ item }}"
        section: DEFAULT
        option: debug
        value: false
        backup: no
      with_items:
        - '/etc/nova/nova.conf'
        - '/etc/neutron/neutron.conf'
        - '/etc/heat/heat.conf'
        - '/etc/ironic/ironic.conf'

    - name: fix ceilometer database ttls
      ini_file:
        dest: /etc/ceilometer/ceilometer.conf
        section: database
        option: "{{ item }}"
        value: 259200
        backup: no
      with_items:
        - 'metering_time_to_live'
        - 'event_time_to_live'

    - name: Change dhcp_domain in nova.conf
      lineinfile:
        dest: /etc/nova/nova.conf
        regexp: '^dhcp_domain='
        line: "dhcp_domain={{ undercloud['cloud_domain'] }}"

    - name: restart openstack services
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - 'openstack-*'
        - 'neutron-*'
        - 'httpd'
